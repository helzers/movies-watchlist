{"version":3,"sources":["Components/ListItem/ListItem.js","Pages/MyList/MyList.js","Components/Movie/Movie.js","Components/SearchBar/SearchBar.js","Pages/Search/Search.js","Components/NavBar/NavBar.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","props","isMovieWatched","watchListMovie","watched","className","src","image","alt","title","desc","onClick","setWatchListMovies","watchListMovies","map","item","id","filter","Element","MyList","setListFilter","filteredMovies","options","value","label","useEffect","window","scrollTo","useState","selectedOption","setSelectedOption","defaultValue","onChange","key","movieTitle","Movie","isLongTitle","isVeryLongTitle","length","e","snackbarOpenHandler","SearchBar","onSubmit","getSearch","type","search","updateSearch","placeholder","Search","API_KEY","movies","setMovies","setSearch","query","setQuery","searchResultsTitle","setSearchResultsTitle","open","setOpen","getPopularMovies","useCallback","a","fetch","response","json","data","console","log","results","getSearchMovies","getMovies","Object","keys","getSearchTitle","snackbarCloseHandler","event","reason","preventDefault","target","movie","overview","imageURL","poster_path","addedAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","IconButton","size","fontSize","NavBar","activeClassName","exact","to","Footer","App","setImageURL","listFilter","setFilteredMovies","getConfig","images","secure_base_url","poster_sizes","saveLocalWatchList","localStorage","setItem","JSON","stringify","filterSwitch","getItem","localWatchList","parse","getLocalWatchList","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.cd74f441.chunk.js","sourcesContent":["import React from 'react';\nimport './ListItem.scss';\n\nfunction ListItem(props) {\n    \n    const deleteItem = () => {\n        props.setWatchListMovies(props.watchListMovies.filter((Element) => Element.id !== props.watchListMovie.id))\n    }\n\n    const watchedItem = () => {\n        props.setWatchListMovies(props.watchListMovies.map((item) => {\n            if(item.id === props.watchListMovie.id) {\n                return {\n                    ...item, watched: !item.watched\n                }\n            }\n            return item;\n        }))\n    }\n\n    var isMovieWatched = props.watchListMovie.watched;\n    \n    return(\n        \n        <div className={`list-item-container ${isMovieWatched ? \"watched\" : \"\"}`}>\n            <img src={props.watchListMovie.image} alt=\"\"/>\n            <div className=\"movieDetails\">\n                <h2>{props.watchListMovie.title}</h2>\n                <p>{props.watchListMovie.desc}</p>\n            </div>\n            <div className=\"movieButtons\">\n                <button onClick={watchedItem} className=\"watched-btn\">Watched</button>\n                <button onClick={deleteItem} className=\"delete-btn\">Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","//Importing packages\nimport React, {useEffect, useState} from 'react';\nimport Select from 'react-select';\n//import Dropdown from 'react-bootstrap/Dropdown';\n\n//Importing Styles\nimport './MyList.scss';\n\n//Importing Components\nimport ListItem from '../../Components/ListItem/ListItem.js'\n\nfunction MyList({watchListMovies, setWatchListMovies, setListFilter, filteredMovies}) {\n\n    var options = [\n        {value: \"all\", label: \"All\"},\n        {value: \"watched\", label: \"Watched\"},\n        {value: \"unwatched\", label: \"Unwatched\"}\n    ]\n\n    useEffect(() => {\n        window.scrollTo(0,0);\n    },[])\n\n    var [selectedOption, setSelectedOption] = useState(\"all\");\n    \n    return(\n        <div className=\"watch-list-container\" >\n            <div className=\"title-select\">\n                <span className=\"placeholder-span\"> </span>\n                <h1>My Watch List</h1>\n                <div className=\"select\">\n\n                    <Select className=\"list-filter-select\" value={selectedOption} options={options} defaultValue={options[0].label} \n                        onChange={value => {setSelectedOption(value); setListFilter(value.value)}} />\n\n                </div>\n            </div>\n            <div className=\"my-movies\">\n                {filteredMovies.map(watchListMovie => (\n                    <ListItem key={watchListMovie.id} movieTitle={watchListMovie.title} watchListMovies={watchListMovies} watchListMovie={watchListMovie} setWatchListMovies={setWatchListMovies}/>\n                ))}\n            </div>\n        </div >\n    );\n}\n\nexport default MyList;","import React from 'react';\nimport './Movie.scss';\n\nfunction Movie(props) {\n    \n    \n    const addMovie = e => {\n        props.setWatchListMovies([...props.watchListMovies, {title: props.title, image: props.image, desc: props.desc, watched: false, id: props.id}])\n        //props.addedAlert();\n        props.snackbarOpenHandler();\n    }\n\n    var isLongTitle = false;\n    var isVeryLongTitle = false;\n    if(props.title.length > 20){\n        if(props.title.length > 38){\n            isVeryLongTitle = true\n        }\n        else{\n            isLongTitle = true;\n        }\n    }\n    \n    return(\n        <div className=\"movieContainer\">\n            <img src={props.image} alt=\"Movie Poster\" />\n            <div className={`searchMovieDetails ${isLongTitle ? \"long\" : \"\"} ${isVeryLongTitle ? \"very\" : \"\"}`}>\n                <h1>{props.title}</h1>\n                <p>{props.desc}</p>\n            </div>\n            <div className=\"movieAddButton\">\n                <button onClick={addMovie}>Add +</button>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Movie;","import React from 'react';\nimport './SearchBar.scss';\n\nfunction SearchBar(props) {\n    return(\n        <div className=\"search-bar-container\">\n            <form onSubmit={props.getSearch} className=\"searchForm\">\n                <input className = \"searchBar\" type=\"text\" value={props.search} onChange={props.updateSearch} placeholder=\" Enter Movie Title Here\"/>\n                <button className = \"searchBtn\" type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar;","//Importing packages\nimport React, { useCallback, useState, useEffect, Fragment } from 'react';\n\n//Importing Styles\nimport './Search.scss';\n\n//Importing components\nimport Movie from '../../Components/Movie/Movie.js';\nimport SearchBar from '../../Components/SearchBar/SearchBar.js';\n//import SnackbarAlert from '../../Components/Snackbar/Snackbar.js';\n\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Search(props){\n\n    var API_KEY = '4e3b5358480cc4b8602cf4144f0e7d42';\n\n    /*\n     *  Declaring States\n     */\n    var [movies, setMovies] = useState([]);\n    var [search, setSearch] = useState(\"\");\n    var [query, setQuery] = useState(\"\");\n    var [searchResultsTitle, setSearchResultsTitle] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    \n    /*\n     *  Functions\n     */\n    const getPopularMovies = useCallback( async() => {\n        let response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc`);\n        let data = await response.json();\n        console.log(data);\n        setMovies(data.results);\n    }, [API_KEY])\n    \n    const getSearchMovies = useCallback( async() => {\n        let response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`);\n        let data = await response.json();\n        console.log(data);\n        setMovies(data.results);\n    }, [API_KEY, query])\n    \n    const getMovies = useCallback( async() => {\n        if(Object.keys(query).length === 0){\n          await getPopularMovies();\n        }\n        else {\n          await getSearchMovies();\n        }\n    },[query, getPopularMovies, getSearchMovies])\n\n    var getSearchTitle = useCallback(() => {\n        if(query.length > 0){\n          setSearchResultsTitle(`Search Results For: ${query}`);\n        }\n    }, [query])\n\n    var updateSearch = e => {\n      setSearch(e.target.value);\n    }\n\n    var getSearch = e => {\n      e.preventDefault();\n      setQuery(search);\n      setSearch(\"\");\n    }\n\n    const snackbarOpenHandler = () => {\n        setOpen(true);\n    }\n\n    const snackbarCloseHandler = (event, reason) => {\n        if(reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    }\n    \n    /*\n     *  UseEffect \n     */\n    useEffect(() => {\n        window.scrollTo(0,0);\n    }, [])\n    \n    useEffect(() => {\n        getMovies();\n        getSearchTitle();\n    }, [query, getMovies, getSearchTitle]);\n    \n    return(\n        <div className=\"search-page\">\n            <SearchBar getSearch={getSearch} search={search} updateSearch={updateSearch} /> \n            \n            <h2>{searchResultsTitle}</h2>\n            <div className=\"movieResults\">\n                {movies.map(movie => (\n                    <Movie key={movie.id} id={movie.id} title={movie.title} desc={movie.overview} image={props.imageURL + movie.poster_path} setWatchListMovies={props.setWatchListMovies} watchListMovies={props.watchListMovies} addedAlert={props.addedAlert} snackbarOpenHandler={snackbarOpenHandler}/>\n                ))}\n            </div>\n            <div className=\"snackbar-alert\">\n                {/* <SnackbarAlert open={open} setOpen={setOpen}/> */}\n                <Snackbar anchorOrigin={{vertical: 'bottom', horizontal: 'left'}} open={open} autoHideDuration={3000} onClose={snackbarCloseHandler}\n                message=\"Movie added to your watch list\" action={\n                    <Fragment>\n                        <IconButton size=\"small\" onClick={snackbarCloseHandler}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Fragment>\n                }\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './NavBar.scss';\n\nfunction NavBar(){\n    return(\n        <header>\n            <div className=\"navbar\">\n                <nav className=\"nav-items\">\n                    <NavLink className=\"nav-bar-search\" activeClassName=\"active\" exact to=\"/\">Search</NavLink>\n                    <h1 className=\"nav-bar-title\">MOVIE WATCHLIST</h1>\n                    <NavLink className=\"nav-bar-list\" activeClassName=\"active\" to=\"/list\">My List</NavLink>\n                </nav>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar;","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer(){\n    return (\n        <div className=\"footer-container\">\n            <div className=\"footer-details\">\n                <p>Made by Helen Murphy</p>\n                <p>API by The Movie DB</p>\n            </div>\n                \n            <img src=\"./TMBLogo.svg\" alt=\"Logo\" />\n        </div>\n    )\n}\n\nexport default Footer;","//Importing packages\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\n\n//Importing Styles\nimport './App.scss';\n\n//Importing pages\nimport MyList from './Pages/MyList/MyList.js';\nimport Search from './Pages/Search/Search.js';\n\n//Importing components\nimport NavBar from './Components/NavBar/NavBar.js';\nimport Footer from './Components/Footer/Footer.js';\n\nfunction App() {\n  var API_KEY = '4e3b5358480cc4b8602cf4144f0e7d42';\n\n  /*\n  *   Declaring states\n  */\n  var [imageURL, setImageURL] = useState([]);\n  \n  var [watchListMovies, setWatchListMovies] = useState([]);\n  var [listFilter, setListFilter] = useState(\"all\");\n  var [filteredMovies, setFilteredMovies] = useState([]); \n\n  /*\n  *   Functions\n  */\n\n  var getConfig = useCallback ( async() => {\n    var response = await fetch(`https://api.themoviedb.org/3/configuration?api_key=${API_KEY}`);\n    var data = await response.json();\n    console.log(data);\n    setImageURL(data.images.secure_base_url + data.images.poster_sizes[6]);\n  }, [API_KEY])\n\n  var saveLocalWatchList = useCallback(() => {\n    localStorage.setItem(\"watchListMovies\", JSON.stringify(watchListMovies));\n  }, [watchListMovies])\n\n  var getLocalWatchList = () => {\n    if(localStorage.getItem(\"watchListMovies\") === null) {\n      localStorage.setItem(\"watchListMovies\", JSON.stringify([]));\n    }\n    else {\n      let localWatchList = JSON.parse(localStorage.getItem(\"watchListMovies\"));\n      setWatchListMovies(localWatchList);\n    }\n  }\n\n  const filterSwitch = useCallback( () => {\n    switch(listFilter){\n      case \"watched\":\n        setFilteredMovies(watchListMovies.filter(watchListMovie => watchListMovie.watched === true));\n        break;\n      case \"unwatched\":\n        setFilteredMovies(watchListMovies.filter(watchListMovie => watchListMovie.watched === false));\n        break;\n      default:\n        setFilteredMovies(watchListMovies);\n        break;\n    }\n  }, [setFilteredMovies, watchListMovies, listFilter])\n\n  /*\n  *   All use effect statements\n  */\n  useEffect(() => {\n    getConfig();\n    getLocalWatchList();\n  }, [getConfig])\n\n  useEffect(() => {\n    saveLocalWatchList();\n  }, [watchListMovies, saveLocalWatchList])\n\n  useEffect(() => {\n    filterSwitch();\n  }, [watchListMovies, listFilter, filterSwitch])\n  \n  return (\n    <Router>\n      <div className=\"App\">\n          <NavBar />\n            <div className=\"main-container\">\n              <Switch>\n                <Route path=\"/list\" exact>\n                  <MyList watchListMovies={watchListMovies} setWatchListMovies={setWatchListMovies} setListFilter={setListFilter} filteredMovies={filteredMovies}/>\n                </Route>\n\n                <Route path=\"/\" exact>\n                  <Search imageURL={imageURL} setWatchListMovies={setWatchListMovies} watchListMovies={watchListMovies} />\n                </Route>\n              </Switch>\n\n            </div>\n          <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}